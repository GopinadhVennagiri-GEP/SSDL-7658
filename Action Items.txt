Action Items

First priority:
1. Project setup table and edit screen UI - Gopinadh
2. Basic Details UI (Loader)- Vishal
4. Table creation with get sp and API - AKshay & Gopinadh
	A. Api integration for project setup table,save api- Gopinadh
	B. Basic Details API Integration - Akshay
		a. Consolidation API chagnes- AKshay
		b. Profile+ API changes - Vishal
5. Custom column changes
	a. UI changes for showing suggestions in a table with display name and data type with loader
	b. SP/API changes for storing new columns instead of using reserved ones.
5. Workflow changes
	a. Project configuration JSON changes
	b. remove processing active columns

Second priority:
1. backend - Message processing for schema change - eventId 101
	A. Message processing - Consolidation - 3 days - Akshay
	B. Message processing - Profile to publish - 4 days - Vishal S.
	C. showing message on UI on GetSteps only from Consolidation to publish
		a. UI change - 2 days - Akshay
		b. GetSteps - API change - consolidation - 2 day - Akshay
		c. GetSteps - API change - profle to publish - 2 day - Vishal S.
2. .NET side maintenance
	- Remove all unused columns from all domains
	- Include the new master table for main table columns in domain setup
3. Test case preparation
4. API automation
	- Distribute APIs among members

Project setup detailed action items:

	1. Preparing the Excel with the dummy data.
		a. this will include the combination of the columns and the scnarios.
		b. IsBasicColumn,IsSelectionMandatory,ColumnVisibilityscope.
		c. the values for ColumnVisibilityscope are show vs hide.
	2. Creating a Stored Procedure with the req params to save or update main table with the columns.
		a. tablename, list of maintablecolumn. 
	3. Create API on service side.
	
		

if(tablename doesnot exist)
	then insert new maintable spendssdltable.
if(tablename exist)
	get the tableId = @tableId
if(tableId is not null)
	then insert all the differential columns into spendssdltableschema.

1. Projectsetup page loads -> GetAllTablesListByTableType,api will be called to get all the available maintables.
	 a. if tables are present, the grid will show the available maintables.
	 b. if tables are not present, then add main table section will be shown.
2. user clicks on Add button 
	a. GetMainTableColumnsByParams, this api will be called
	b. user performs some operation and saves
		a. new Save api{SaveMainTableWithColumns} call will be called.
		b. new Bao
		c. new Dao
		d. new Sp for Save.
3.  user clicks on Edit
	a. GetMainTableColumnsByParams, this api will be called
	b. user performs some operation and saves
		a. Save api{SaveMainTableWithColumns} call will be called.
		b. Bao
		c. Dao
		d. Sp for Save.

Maintenance activities:
1. Remove foreign keys from some tables before deleting un-used columns.
	Dev - done.
	QC - done.
	UAT - pending.
	Prod - pending.
2. Mark inactive columns as active (if configured) and then remove rest of the inactive columns.
	Dev - done.
	QC - done.
	UAT - pending.
	Prod - pending.
3. Correct data type.
	Dev - done.
	QC - done.
	UAT - pending.
	Prod - pending.
4. Correct data length for template main table columns - excluding custom columns.
	Dev - done.
	QC - done.
	UAT - pending.
	Prod - pending.
5. Correct data length for custom main table columns - Check with Vishal Shingote/Abhijit.
	Dev - pending.
	QC - pending.
	UAT - pending.
	Prod - pending.
6. Correct the static asset script for OPS_MAIN until we decide to remove the OPS_MAIN from static asset.
7. Correct the field category as per Excel.
	Dev - pending.
	QC - pending.
	UAT - pending.
	Prod - pending.
8. Correct the Display Column name as per excel. Because Display name for these columns are wrong in Excel:
	Mentioned in the comments.
	Recitified in JIRA.
	Need to get them corrected on all environments/domains.
9. Not required anymore - We may have to send a communication to users when we correct the display name for following:
	GEP_UP_STATUS_FLAG, GEP UP Status Flag, Nvarchar, GEP Parent Linkage Status Flag
	GEP_CF_STATUS_FLAG, GEP CF Status Flag, Nvarchar, GEP Classification Status Flag
	GEP_VNE_STATUS_FLAG, GEP VN Status Flag, Nvarchar, GEP Supplier Normalization Status Flag

Additional validations:
1. Spend and date field are currently not mandatory and we have to make them mandatory on UI.
2. Moving to main - source to main data type matching is pending.
3. Disabling main table drop down instantly after saving.
4. Check with PMG for helper text for custom columns.
5. Plan for showing columns that are configured in job/circle/step.
6. Remove datetime from custom column.

1. int to bigint
2. date to datetime
3. any data type to nvarchar
4. nvarchar to any thing else - blocked

Remove 11 columns from template master, except IMPORTEXPORTUID series.

One script to check source to main with data type discrepancy.
UI change - moving to main table - compatible data type mapping should be allowed.

I had not taken Clustering columns and Data lake mapping columns in consideration for making them active IF they are inactive and used.

Release notes:
1. Removal of un-used inactive columns from UI as well as ADB.
2. Removal of 10 internal columns only from UI, will be used internally by ADB.
3. Data type matching validations flexibility.
4. 21 columns not supposed to be used.
5. Out of 21 columns, 11 columns will be removed from UI (meta data of domain onboarding process).
6. 

Demo:
1. Navigate to Project Setup
2. Open Add new main table screen
3. Filter
4. Sort
5. Show Basic columns
6. Select columns and save main table
7. Go to Creating a new job
8. Select a main table.
9. loader that appears temporarily
10. which activities will create a main table on ADB.
11. Export Utility won't create a main table on ADB.
12. Show adding a custom column.
13. Show custom column suggestion table.
14. future plan for - the un-used columns of Publish - 4 Standard steps.

Points about activities for users:
1. 21 internal system columns

2. OPS_MAIN will not be created by default for new domains on any environment/domain after this story is delivered to PROD.
3. Un-configured inactive columns will be removed from both UI and ADB from UAT and Prod as a one-time clean up activity.
4. All int data type columns of all main table will be converted to bigint data type on UI.
	On ADB, the int and bigint is treated as long.
5. Moving to main step in Consolidation will have flexible validation for int to bigint mapping.
6. Clustering will only work for OPS_MAIN. Normalize and Classify won't work for other main tables until Clustering changes are delivered.
7. Because of that, even for new domains, user will have to create OPS_MAIN until those stories are delivered.
8. User should be able to run a job with one main table, if other job with other main table is in Error or Stopped at last step status or paused status.
9. When users add a main table on UI, it will be physically created while running a workflow job that has any one circle from Consolidation to Publish.
OR using Import Utility -> without using Unique ID option.
10. If user adds a main table on UI, and without running workflow or Import, if they run Export Utility, it won't run
because that table has to be physically created. The physical creation will only happen from Consolidation to Publish and Import Utility without using Unique ID option.

Pending points for Release notes:
1. Cube also won't work for other main tables until its delivery.
@Pratik - Custom column validation changes:
2. SSDL-10250 story changes will also be part of this UAT release.
@Vishal Shingote - Cube
3. User will have to contact Support team for creating a cube for a new main table.
4. Columns which are used in existing cube configurations, user has to make sure that they are selected in Project setup.

Feedback from demo:
1. UI for custom columns suggestion table needs width adjustment. The info icon is very far.
2. The Publish - 4 standard steps discussion should show only un-used but selected columns.
3. If we are converting columns from int to bigint for main table columns, can we providing bigint in source table columns?

Maintenance acitivites plan in this sequence:
1. Add missing mandatory columns to OPS_MAIN
2. Make mandatory columns Active in OPS_MAIN
3. Remove all inactive unconfigured uncreated custom columns.
- Script added to final.
4. Identify and mark the "used but inactive" columns as active.
- Script added to final.
5. Remove all remaining inactive columns.
- Script added to final.
6. Correct data type.
- Script added to final.
7. Correct data length.
- Script added to final.
8. Correct display name.
- Script added to final.
9. UAT - Remove all Unused Uncreated but Active custom columns.
- SCRIPT NOT YET ADDED.
10. Check if any column exists in OPS_MAIN but not in Excel file.

UAT Release plan:
1. Normal DB deployment to UAT - Foreign keys will be removed.
2. I will checkin the maintenance script via NewMasterSCript and re-run QC pipeline and deploy on QC and UAT.
3. Remove that script after deployment and verification.

PRod release plan
1. Normal DB deployment to PRod - Foreign keys will be removed.
2. Checkin the maintenance script to HOTFIX and deploy the db.
4. Remove that script after deployment and verification.
