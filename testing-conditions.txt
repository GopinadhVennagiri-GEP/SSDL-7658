Action items before or during QC:
1. From C#, SQL, Angular (Workflow and Utilities)
    1) Wherever Custom columns are filtered, make sure they are filtere by FieldCategory instead of name or Column name or DisplayColumnName.
2. Consolidation
    1) Spend Normalization child popup:
        GEP Norm Spend columns are expected.
    Ans - only testing required

3. Before committing or merging your code, scan through all plugins to check for any filters applied on main table columns.

4. We have to remove unused columns specially custom columns on prod later.
BE CAREFUL!!!!!!!!

5. Done - Review of stories:
    https://smartbygep.atlassian.net/browse/SSDL-4223

6. Find all references of Get columns () and change accordingly
    Examples of getting Main table columns
    Safe dependencies:
        a) ProfileDAO
            1) GetMainTableColumns
                References:
                    SpendCubeRefreshBAO.GetFeedbackSsdlColumnMapping
            2) GetAllMainTableColumns - No change
            3) GetAllTableColumns - No change
        b) ProfileBAO
            1) GetMainTableColumns - No change
            2) GetAllMainTableColumns - Done - 5 references replaced with new code
                References:
                2.1) ActivityConfigurationBAO.cs
                2.2) ClassfyAIBAO.cs
                2.3) ConsolidationWorkflowBAO.cs
                2.4) ProfileSplitConfigurationBAO.cs
                2.5) PublishCubeSplitConfigurationBAO.cs
            3) GetAllTableColumns - No change
        c) ImportUtilityBAO - Done
            1) GetAllTableColumns - connected with TableDAO.GetAllTablesAndColumns
        d) TableDAO - Done
            1) GetAllTablesAndColumns

7. Removed processing active columns in C#
8. Write a query to identify all columns of OPS_MAIN that are being used in workflows and utilities but are not active.

Testing scenarios:
1. Project setup screen
    1) All main tables of that domain should be visible, specially OPS_MAIN.
    2) Add main table
    3) Edit OPS_MAIN table
    4) Enable new columns
    5) Sorting
    6) Filtering
    7) Pagination
    8) Basic Columns checkbox
    9) Mandatory selected columns - user should not be able to de-select them.
    10) unable to de-select saved columns
    11) Unseelected columns at the beginning of the table and saved/default selected columns at the end of the table.
2. Basic details
    Before save:
    1) See all main tables
    2) Select a main table and verify loader is appearing to fetch the columns.
    3) If a main table has float and date columns then they should be available in Spend field and Date field dropdowns in Basic Details.
    After save:
    1) Main table dropdown should be disabled if at least one setting exist in the backend between consolidation to publish.
    2) 
3. Workflow scope:
    1) Configure a one-time job from Load to Publish with New Load Data
    2) Configure a one-time job from Load to Publish with Historical
    3) Configure a one-time job from Load to Publish with Historical + New load data
    4) Using Stop After Every Stage
        4.1) Run Consolidation with a fresh new main table added from Project setup
        4.2) re-run Consolidation in the same job by adding a new column to same main table via Project Setup.
        4.3) Run Consolidation for a fresh new main table then run Profile by adding a new column to same main table.
    5) Run a job by adding a new column to an existing main table via Project Setup.
    6) Custom columns
        6.1) Test by adding custom columns from following screens.
        6.2) Added columns should be visible while configuring any job or Import/export as well as project setup.
        6.3) Run a job by adding custom columns.
        Available screens for custom columns:
        6.3) Consolidation - Moving to main table
        6.4) Consolidation - Master based normalization
        6.5) Publish - multiple screens?? - check with Vishal Shingote.
    7) From Consolidation to Publish - if user has not selected a main table in basic details
        then upon clicking Configure button of any step, they should see a message saying Please select a main table to configure steps.
    8) Consolidation - Master Based Normalization - pending
        8.1) Each Reference master should be created against a main table as its base.
        8.2) Currently if user saves a Reference master table in a job and if that Reference master table configuration is already existing in other jobs
            then same table configuration is copied across all jobs - Built with SSDL-8463 by Hari.
        8.3) Question - what should happen if user is creating a Reference master table with name that already exists but it was previously created using a different main table.
        8.4) Generate master for a Reference master table created using a new main table and check if Table is generated successfully or it fails.
4. Job cloning
    1) While cloning a job, the main table dropdown should be disabled.
        That means user won't be able to change the main table for a new copy.
5. Import/export
    1) Run an import request for a main table
    2) Run an export request for a main table
6. Job export - pending
    1) 
7. Cube refresh - pending
    1) 
8. Clustering columns - pending
    1) 

Dangerous dependencies:
    a) SpendCubeRefreshBAO - DANGER
        1) GetFeedbackSsdlColumnMapping - Check with Archit
    b) ActivityConfigurationBAO - Story from Rachael
        1) GetSupplierClusteringColumn
        2) GetClassifyClusteringColumn
    c) ClassfyAIBAO - Story from Rachael
        1) GetSupplierClusteringColumn
        2) GetClassifyClusteringColumn
    d) ProfileSplitConfigurationBAO - Story from Rachael
        1) GetSupplierClusteringColumn
        2) GetClassifyClusteringColumn
    e) PublishCubeSplitConfigurationBAO - Story from Rachael
        1) GetSupplierClusteringColumn
        2) GetClassifyClusteringColumn
    f) ProjectSetupBAO - DANGER
        1) GetDataLakeMapping - connected with ProjectSetupDAO.GetMainTableColumns
    g) ProjectSetupDAO - DANGER
        1) GetMainTableColumns

Special conditions to filter out main table columns:
1. Spend Normalization needs GEP_NORM_SPEND_ columns
2. Publish - one time flag displays only Nvarchar data type while creating custom columns.
3. Exclusion summary - ignores GEP_EXCLUDE column
4. Classify through rules - hard code columns are:
    a) GEP_CATEGORY_CODE, GEP_AI_SOURCE_CF, GEP_CF_SOURCE, GEP_CF_SOURCE_2, GEP_RULE_ID
    b) Uses columns that either match GEP_ or CUSTOM_
5. spend-Normalization-historical-data
    a) Uses columns that match either GEP_ULT_PARENT OR GEP_NORM_SUPP_NAME
6. Normalization through AI
    a) Uses columns that either match GEP_ or CUSTOM_
7. ps-classification-clustering
    a) Uses that match GEP_NORM_SPEND and should not end with WITHOUT_TAX
    b) Uses GEP_
8. ps-supplier-normalization-clustering
    a) Uses that match GEP_NORM_SPEND and should not end with WITHOUT_TAX
    b) Uses GEP_
9. rule-configuration.ts
    a) hard coded: GEP_Reviewer_Status, GEP_Reviewer_Comments, OLD_GEP_NORM_SUPP_NAME, OLD_GEP_ULT_PARENT, GEP_NORM_SUPP_NAME_OPERATOR, GEP_NORM_SUPP_NAME_VALUE, GEP_ULT_PARENT_OPERATOR, GEP_ULT_PARENT_VALUE
10. Vne-configure-stage
    a) hard coded: GEP_NORM_SUPP_NAME
11. spend-vne-generate
    a) hard coded: GEP_NORM_SUPP_NAME, GEP_VNE_HISTORICAL_FLAG, GEP_VNE_SOURCE,
    GEP_VNE_SOURCE_2, GEP_AI_SOURCE_VNE, GEP_ULT_PARENT, GEP_UP_HISTORICAL_FLAG,
    GEP_UP_SOURCE, GEP_UP_SOURCE_2, GEP_AI_SOURCE_UP, GEP_UP_STATUS_FLAG, GEP_VNE_STATUS_FLAG
12. vne-rules-popup
    a) Uses columns that either match GEP_ or CUSTOM_
    b) hard coded : GEP_ULT_PARENT, GEP_UP_SOURCE, GEP_NORM_SUPP_NAME, GEP_VNE_SOURCE, GEP_VNE_SOURCE_2, GEP_AI_SOURCE_VNE, GEP_ULT_PARENT, GEP_UP_SOURCE, GEP_UP_SOURCE_2, GEP_AI_SOURCE_UP, GEP_RULE_ID
14. trendcheck-table
    a) hard coded: GEP_NORM_SPEND
15. AIfields
    a) hard coded: GEP_NORM_SUPP_NAME, GEP_VNE_SOURCE, GEP_VNE_SOURCE_2, GEP_AI_SOURCE_VNE, GEP_ULT_PARENT, GEP_UP_SOURCE, GEP_UP_SOURCE_2, GEP_AI_SOURCE_UP
    

Pending stories/tasks:
https://smartbygep.atlassian.net/browse/SSDL-11141
https://smartbygep.atlassian.net/browse/SSDL-11146
https://smartbygep.atlassian.net/browse/SSDL-9975
https://smartbygep.atlassian.net/browse/SSDL-10895
https://smartbygep.atlassian.net/browse/SSDL-6433
https://smartbygep.atlassian.net/browse/SSDL-10535