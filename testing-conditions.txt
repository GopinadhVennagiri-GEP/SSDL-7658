Action items before or during QC:
1. From C#, SQL, Angular (Workflow and Utilities)
    1) Wherever Custom columns are filtered, make sure they are filtere by FieldCategory instead of name or Column name or DisplayColumnName.
2. Consolidation
    1) Spend Normalization child popup:
        GEP Norm Spend columns are expected.
    Ans - only testing required

3. Before committing or merging your code, scan through all plugins to check for any filters applied on main table columns.

4. We have to remove unused columns specially custom columns on prod later.
BE CAREFUL!!!!!!!!

5. Done - Review of stories:
    https://smartbygep.atlassian.net/browse/SSDL-4223

6. Find all references of Get columns () and change accordingly
    Examples of getting Main table columns
    Safe dependencies:
        a) ProfileDAO
            1) GetMainTableColumns
                References:
                    SpendCubeRefreshBAO.GetFeedbackSsdlColumnMapping
            2) GetAllMainTableColumns - No change
            3) GetAllTableColumns - No change
        b) ProfileBAO
            1) GetMainTableColumns - No change
            2) GetAllMainTableColumns - Done - 5 references replaced with new code
                References:
                2.1) ActivityConfigurationBAO.cs
                2.2) ClassfyAIBAO.cs
                2.3) ConsolidationWorkflowBAO.cs
                2.4) ProfileSplitConfigurationBAO.cs
                2.5) PublishCubeSplitConfigurationBAO.cs
            3) GetAllTableColumns - No change
        c) ImportUtilityBAO - Done
            1) GetAllTableColumns - connected with TableDAO.GetAllTablesAndColumns
        d) TableDAO - Done
            1) GetAllTablesAndColumns

7. Removed processing active columns in C#
8. Write a query to identify all columns of OPS_MAIN that are being used in workflows and utilities but are not active.

Testing scenarios:


Dangerous dependencies:
    a) SpendCubeRefreshBAO - DANGER
        1) GetFeedbackSsdlColumnMapping - Check with Archit
    b) ActivityConfigurationBAO - Story from Rachael
        1) GetSupplierClusteringColumn
        2) GetClassifyClusteringColumn
    c) ClassfyAIBAO - Story from Rachael
        1) GetSupplierClusteringColumn
        2) GetClassifyClusteringColumn
    d) ProfileSplitConfigurationBAO - Story from Rachael
        1) GetSupplierClusteringColumn
        2) GetClassifyClusteringColumn
    e) PublishCubeSplitConfigurationBAO - Story from Rachael
        1) GetSupplierClusteringColumn
        2) GetClassifyClusteringColumn
    f) ProjectSetupBAO - DANGER
        1) GetDataLakeMapping - connected with ProjectSetupDAO.GetMainTableColumns
    g) ProjectSetupDAO - DANGER
        1) GetMainTableColumns

Special conditions to filter out main table columns:
1. Spend Normalization needs GEP_NORM_SPEND_ columns
2. Publish - 4 standard screens display only Nvarchar data type while creating custom columns.
3. Exclusion summary - ignores GEP_EXCLUDE column
4. Classify through rules - hard code columns are:
    a) GEP_CATEGORY_CODE, GEP_AI_SOURCE_CF, GEP_CF_SOURCE, GEP_CF_SOURCE_2, GEP_RULE_ID
    b) Uses columns that either match GEP_ or CUSTOM_
5. spend-Normalization-historical-data
    a) Uses columns that match either GEP_ULT_PARENT OR GEP_NORM_SUPP_NAME
6. Normalization through AI
    a) Uses columns that either match GEP_ or CUSTOM_
7. ps-classification-clustering
    a) Uses that match GEP_NORM_SPEND and should not end with WITHOUT_TAX
    b) Uses GEP_
8. ps-supplier-normalization-clustering
    a) Uses that match GEP_NORM_SPEND and should not end with WITHOUT_TAX
    b) Uses GEP_
9. rule-configuration.ts
    a) hard coded: GEP_Reviewer_Status, GEP_Reviewer_Comments, OLD_GEP_NORM_SUPP_NAME, OLD_GEP_ULT_PARENT, GEP_NORM_SUPP_NAME_OPERATOR, GEP_NORM_SUPP_NAME_VALUE, GEP_ULT_PARENT_OPERATOR, GEP_ULT_PARENT_VALUE
10. Vne-configure-stage
    a) hard coded: GEP_NORM_SUPP_NAME
11. spend-vne-generate
    a) hard coded: GEP_NORM_SUPP_NAME, GEP_VNE_HISTORICAL_FLAG, GEP_VNE_SOURCE,
    GEP_VNE_SOURCE_2, GEP_AI_SOURCE_VNE, GEP_ULT_PARENT, GEP_UP_HISTORICAL_FLAG,
    GEP_UP_SOURCE, GEP_UP_SOURCE_2, GEP_AI_SOURCE_UP, GEP_UP_STATUS_FLAG, GEP_VNE_STATUS_FLAG
12. vne-rules-popup
    a) Uses columns that either match GEP_ or CUSTOM_
    b) hard coded : GEP_ULT_PARENT, GEP_UP_SOURCE, GEP_NORM_SUPP_NAME, GEP_VNE_SOURCE, GEP_VNE_SOURCE_2, GEP_AI_SOURCE_VNE, GEP_ULT_PARENT, GEP_UP_SOURCE, GEP_UP_SOURCE_2, GEP_AI_SOURCE_UP, GEP_RULE_ID
14. trendcheck-table
    a) hard coded: GEP_NORM_SPEND
15. AIfields
    a) hard coded: GEP_NORM_SUPP_NAME, GEP_VNE_SOURCE, GEP_VNE_SOURCE_2, GEP_AI_SOURCE_VNE, GEP_ULT_PARENT, GEP_UP_SOURCE, GEP_UP_SOURCE_2, GEP_AI_SOURCE_UP

What if someone has already configured Consolidation - moving to main table
with PO_UNIT_PRICE_LOCAL column
It won't break on executing project config json.
It will break executing consolidation
because data will come from string column and try to go into double column.
If it's a one time job then no worries.
If it's a recurring job then we need to ask the users to change the configuration
wherever they are using PO_UNIT_PRICE_LOCAL column.
Two issues:
1. Project config json will fail because of length being present for float column.
2. If (1) is not present then still consolidation will fail becuase of data type mismatch.

Data type and length correction:
1) int to bigint
    1.1) GEP_CLN_CLUSTER
    1.2) 'IMPORTEXPORTUID%' 10 columns - int to bigint
2) PO_UNIT_PRICE_LOCAL -- string to float
3) PO_UNIT_PRICE_LOCAL -- make length 255 to 0
4) MODIFIED_DATE - was smallint on QC so check for other environments - datetime.
5) from boolean to string
    same for:
GEP_DELTAFLAG
GEP_DIVERSITY_8A_CERTIFICATION_INDICATOR
GEP_DIVERSITY_AIRPORT_CONCESSION_DISADVANTAGED_BUSINESS_ENTERPRISE_INDICATOR
GEP_DIVERSITY_ALASKAN_NATIVE_CORPORATION_INDICATOR
GEP_DIVERSITY_CERTIFIED_SMALL_BUSINESS_INDICATOR
GEP_DIVERSITY_DISABLED_VETERAN_BUSINESS_ENTERPRISE_INDICATOR
GEP_DIVERSITY_DISABLED_OWNED_BUSINESS_INDICATOR
GEP_DIVERSITY_DISADVANTAGED_BUSINESS_ENTERPRISE_INDICATOR
GEP_DIVERSITY_DISADVANTAGED_VETERAN_ENTERPRISE_INDICATOR
GEP_DIVERSITY_HUB_ZONE_CERTIFIED_BUSINESS_INDICATOR
GEP_DIVERSITY_LABOR_SURPLUS_AREA_INDICATOR
GEP_DIVERSITY_MINORITY_BUSINESS_ENTERPRISE_INDICATOR
GEP_DIVERSITY_MINORITY_COLLEGE_INDICATOR
GEP_DIVERSITY_MINORITY_OWNED_INDICATOR
GEP_DIVERSITY_OUT_OF_BUSINESS_INDICATOR
GEP_DIVERSITY_POLITICAL_DISTRICT
GEP_DIVERSITY_SERVICE_DISABLED_VETERAN_OWNED_INDICATOR
GEP_DIVERSITY_SMALL_BUSINESS_INDICATOR
GEP_DIVERSITY_SMALL_DISADVANTAGED_BUSINESS_INDICATOR
GEP_DIVERSITY_VETERAN_BUSINESS_ENTERPRISE_INDICATOR
GEP_DIVERSITY_VETERAN_OWNED_INDICATOR
GEP_DIVERSITY_VIETNAM_VETERAN_OWNED_INDICATOR
GEP_DIVERSITY_OTHER_VETERAN_OWNED_INDICATOR
GEP_DIVERSITY_WOMAN_OWNED_BUSINESS_ENTERPRISE_INDICATOR
GEP_DIVERSITY_WOMAN_OWNED_INDICATOR
GEP_DIVERSITY_AFRICAN_AMERICAN_OWNED_INDICATOR
GEP_DIVERSITY_ASIAN_PACIFIC_AMERICAN_OWNED_INDICATOR
GEP_DIVERSITY_HISPANIC_AMERICAN_OWNED_INDICATOR
GEP_DIVERSITY_NATIVE_AMERICAN_OWNED_INDICATOR
GEP_DIVERSITY_SUBCONTINENT_ASIAN_AMERICAN_OWNED_INDICATOR


Range bucket -
    Select field for storing Bucket Name
old new flag
    Select field for storing the New/Old Flag Value *
one time flag
    Select field for storing the One time Flag
one many flag
    Select field for storing the One - Many Flag

Pending stories/tasks:
https://smartbygep.atlassian.net/browse/SSDL-11141
https://smartbygep.atlassian.net/browse/SSDL-11146
https://smartbygep.atlassian.net/browse/SSDL-9975
https://smartbygep.atlassian.net/browse/SSDL-10895
https://smartbygep.atlassian.net/browse/SSDL-6433
https://smartbygep.atlassian.net/browse/SSDL-10535

Blockers:
1. Publish - unused active column.
2. Schema change operation time
3. Reference master conflict